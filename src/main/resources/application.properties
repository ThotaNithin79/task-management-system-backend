spring.application.name=task-management
# ======================================================
# DATABASE CONFIGURATION (MySQL)
# ======================================================

# The JDBC URL for your database.
# The database name "task_management_system" must match what you created.
spring.datasource.url=jdbc:mysql://localhost:3306/task_management_system

# The username and password for your MySQL server.
# Use the 'root' password you set during installation.
spring.datasource.username=root
spring.datasource.password=@13M25y1

# The specific driver class for MySQL.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ======================================================
# JPA & HIBERNATE CONFIGURATION
# ======================================================

# This tells Hibernate (the JPA provider) which SQL dialect to use.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# This is a CRITICAL setting.
# "validate" checks if your Java classes (@Entity) match the database tables. If they don't, the app will fail to start. This is safe.
# "update" will automatically try to add columns/tables if they are missing. Good for development.
# "create-drop" or "create" will wipe your data every time. DANGEROUS for this project.
spring.jpa.hibernate.ddl-auto=validate

# Optional: Show the actual SQL queries being run in the console. Very useful for debugging.
spring.jpa.show-sql=true


# ======================================================
# JWT CONFIGURATION
# ======================================================
# IMPORTANT: Use a long, complex, base64-encoded secret in a real production environment.
# Generate one from a site like https://www.allkeysgenerator.com/Random/Security-Key-Generator.aspx
app.jwt.secret=8d8aaec25137c1e0d2346cd4354eb0498fed7e41d38df6a5e9c2c6d06e1776fa
app.jwt.expiration-ms=86400000